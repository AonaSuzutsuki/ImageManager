<Window x:Class="ImageManager.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:CommonViews="clr-namespace:CommonStyleLib.Views;assembly=CommonStyleLib"
        Icon="pack://application:,,,/CommonStyleLib;component/Resources/1.ico"
        Title="Savannah Manager" Name="_MainWindow" Height="535" Width="768" Top="{Binding Path=Top.Value,Mode=TwoWay}" Left="{Binding Path=Left.Value,Mode=TwoWay}" TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType" UseLayoutRounding="True">
    <!--xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"-->

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Closing}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding Activated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Deactivated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="StateChanged">
            <i:InvokeCommandAction Command="{Binding StateChanged}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <CommonViews:InvokeDelegateCommandAction Command="{Binding KeyDown}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="{x:Static SystemParameters.CaptionHeight}"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                      UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Icon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Main.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/ListBoxStyle.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ImageManager;component/Styles/ButtonIcon.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Style="{DynamicResource ResourceKey=BackgroundGrid}">
        <Border Name="AroundBorder" BorderBrush="{Binding AroundBorderColor.Value}" Opacity="{Binding AroundBorderOpacity.Value}" BorderThickness="1" />

        <Grid Margin="{Binding MainWindowMargin}">
            
            <StackPanel Orientation="Horizontal" Margin="5,0,0,0"
                        HorizontalAlignment="left"
                        VerticalAlignment="Top">
                <Image Source="{StaticResource Icon}" Width="15" Height="15" Stretch="Uniform" WindowChrome.IsHitTestVisibleInChrome="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <CommonViews:InteractiveCommand Command="{Binding ImageMouseDown}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <Label Content="Savannah Manager" Style="{DynamicResource ResourceKey=StatTitle}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                <Button Name="MainWindowMinimumBT" Content="{Binding MainWindowMinimumBTContent}" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding MainWindowMinimumBTClick}" />
                <Button Name="MainMaximumBT" Content="{Binding MainWindowMaximumBTContent}" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding MainWindowMaximumBTClick}" />
                <Button Name="MainWindowCloseBT" Content="{Binding MainWindowCloseBTContent}" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding MainWindowCloseBTClick}" />
            </StackPanel>

            <StackPanel Margin="1,25,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <Menu IsMainMenu="True" Name="Menu" Height="25" Padding="3" VerticalAlignment="Top">
                    <MenuItem Header="ファイル(_F)">
                        <MenuItem Header="新規作成" Command="{Binding CreateArchiveBtClicked}" />
                        <MenuItem Header="開く" Command="{Binding OpenArchiveBtClicked}" />
                        <MenuItem Header="閉じる" Command="{Binding FileCloseBtClicked}" IsEnabled="{Binding IsOpened.Value}" />
                        <Separator Style="{DynamicResource MLB_Separator}" />
                        <MenuItem Header="キャッシュの削除" Command="{Binding DeleteCacheBtClicked}" />
                        <Separator Style="{DynamicResource MLB_Separator}" />
                        <MenuItem Header="終了(_X)" Command="{Binding MainWindowCloseBTClick}" />
                    </MenuItem>
                </Menu>
            </StackPanel>

            <Grid Margin="5,55,5,0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="73" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                
                <StackPanel Orientation="Horizontal">
                    <Button Width="25" Height="25" IsEnabled="{Binding BackBtIsEnabled.Value}" Style="{DynamicResource BackBtIcon}" Command="{Binding BackBtClicked}" />
                    <Border Width="1" Margin="5,2,5,0" BorderBrush="{DynamicResource BorderWhiteColor}" BorderThickness="1" />
                    <Button Width="25" Height="25" IsEnabled="{Binding ForwardBtIsEnabled.Value}" Style="{DynamicResource ForwardBtIcon}" Command="{Binding ForwardBtClicked}" />
                    <Border Width="1" Margin="5,2,5,0" BorderBrush="{DynamicResource BorderWhiteColor}" BorderThickness="1" />
                </StackPanel>
                
                <TextBox Grid.Column="1" Text="{Binding PathText.Value}" />
            </Grid>

            <Grid Margin="1,85,1,0">

                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="25" />
                </Grid.RowDefinitions>

                <ListBox Grid.Row="0" SelectionMode="Extended" ItemsSource="{Binding FileDirectoryItems.Value}" SelectedItem="{Binding SelectedItem}" Background="Transparent" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel ItemHeight="100" ItemWidth="100" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Image Source="{Binding ImageSource}" Width="50" Height="50" HorizontalAlignment="Center" />
                                <Label Content="{Binding Text}" HorizontalAlignment="Center" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding ListBoxDoubleClicked}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox} }, Path=SelectedItem}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ListBoxSelectionChanged}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox} }, Path=SelectedItem}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add File" Command="{Binding AddFileBtClicked}" IsEnabled="{Binding IsOpened.Value}" />
                            <MenuItem Header="Add Files In Directory" Command="{Binding AddFilesInDirectoryBtClicked}" IsEnabled="{Binding IsOpened.Value}" />
                            <Separator Style="{DynamicResource MLB_Separator}" />
                            <MenuItem Header="Create Directory" Command="{Binding CreateDirectoryBtClicked}" IsEnabled="{Binding IsOpened.Value}" />
                            <Separator Style="{DynamicResource MLB_Separator}" />
                            <MenuItem Header="Extract files on directory" Command="{Binding ExtractFilesOnDirClicked}" IsEnabled="{Binding IsOpened.Value}" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    
                </ListBox>

                <Grid Grid.Row="1" Background="{Binding AroundBorderColor.Value}">
                    <Label Content="{Binding UnderMessageLabelText.Value}" />
                </Grid>

            </Grid>
            
        </Grid>
    </Grid>

</Window>
